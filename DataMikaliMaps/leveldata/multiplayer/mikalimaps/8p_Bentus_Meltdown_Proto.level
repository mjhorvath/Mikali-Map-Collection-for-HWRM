-- (8P) Bentus Meltdown v1.6.10 by Mikali
-- Created: 2004/03/15
-- Updated: 2021/06/03
-- Homepage: http://isometricland.net/homeworld/homeworld.php
-- Teams: odds vs. evens

dofilepath("data:scripts/utilfunc.lua")
dofilepath("data:scripts/MapFunctions.lua")

--levelDesc = "<c=FF4800>Bentus Meltdown 1.6.10</c>"
maxPlayers = 8
player = {}

for k = 0, maxPlayers - 1 do
	player[k] = {id = k, name = "", raceName = "Vaygr", resources = 1500, raceID = 2, startPos = 1,}
end

function DetermChunk()
	-- seed value for random functions
	local my_seed_1 = newseed(seed_proto)
	local my_coordinates = {}

	setWorldBoundsInner({0, 0, 0}, {60000, 60000, 60000})

--	addCamera("pieplatetest", {0,0,0,}, {0, 32768,0,})

	local ring1 =
	{
		cood = {0,0,0,},
		axs1 = srandom(my_seed_1, 25000, 30000),
		axs2 = srandom(my_seed_1, 25000, 30000),
		thck = srandom(my_seed_1, 1000, 2000),
		hght = srandom(my_seed_1, 100, 200),
		tilt = srandom(my_seed_1) * 180,
		spin = srandom(my_seed_1) * 360,
	}
	local ring2 =
	{
		cood = {0,0,0,},
		axs1 = srandom(my_seed_1, 25000, 30000),
		axs2 = srandom(my_seed_1, 25000, 30000),
		thck = srandom(my_seed_1, 1000, 2000),
		hght = srandom(my_seed_1, 100, 200),
		tilt = srandom(my_seed_1) * 180,
		spin = srandom(my_seed_1) * 360,
	}
	local ring3 =
	{
		cood = {0,0,0,},
		axs1 = srandom(my_seed_1, 25000, 30000),
		axs2 = srandom(my_seed_1, 25000, 30000),
		thck = srandom(my_seed_1, 1000, 2000),
		hght = srandom(my_seed_1, 100, 200),
		tilt = srandom(my_seed_1) * 180,
		spin = srandom(my_seed_1) * 360,
	}
	local ring4 =
	{
		cood = {0,0,0,},
		axs1 = srandom(my_seed_1, 25000, 30000),
		axs2 = srandom(my_seed_1, 25000, 30000),
		thck = srandom(my_seed_1, 1000, 2000),
		hght = srandom(my_seed_1, 100, 200),
		tilt = srandom(my_seed_1) * 180,
		spin = srandom(my_seed_1) * 360,
	}
	local ring5 =
	{
		cood = {0,0,0,},
		axs1 = srandom(my_seed_1, 50000, 60000),
		axs2 = srandom(my_seed_1, 50000, 60000),
		thck = srandom(my_seed_1, 1000, 2000),
		hght = srandom(my_seed_1, 100, 200),
		tilt = srandom(my_seed_1) * 180,
		spin = srandom(my_seed_1) * 360,
	}
	local coordRing =
	{
		{2, "Coordinate", my_coordinates,},
	}
	local patchRing =
	{
		{4, "Function", easyPatch, {0,0,0,}, 100,},
	}
	local centerSphere =
	{
		{ 8,    "Nebula", "Nebula4_OLD1", "M11_Bentusi_Radiation", {0,0,0,}, {1,1,1,1,}, 0, 10000,},
		{16, "DustCloud", "polySurface1",           "DustCloud_0", {0,0,0,}, {1,1,1,1,}, 0, 5000,},
		{ 1,  "Squadron",      "Bentus1",     "meg_bentus_ruin_1", {0,0,0,}, -1, {0,0,0,}, 0, 0,},
		{ 1,  "Squadron",      "Bentus2",     "meg_bentus_ruin_2", {0,0,0,}, -1, {0,0,0,}, 0, 0,},
		{ 1,  "Squadron",      "Bentus3",     "meg_bentus_ruin_3", {0,0,0,}, -1, {0,0,0,}, 0, 0,},
		{ 1,  "Squadron",      "Bentus4",     "meg_bentus_ruin_4", {0,0,0,}, -1, {0,0,0,}, 0, 0,},
		{ 1,  "Squadron",      "Bentus5",     "meg_bentus_ruin_5", {0,0,0,}, -1, {0,0,0,}, 0, 0,},
		{ 1,  "Squadron",      "Bentus6",     "meg_bentus_ruin_6", {0,0,0,}, -1, {0,0,0,}, 0, 0,},
		{ 1,  "Squadron",      "Bentus7",     "meg_bentus_ruin_7", {0,0,0,}, -1, {0,0,0,}, 0, 0,},
		{ 1,  "Squadron",      "Bentus8",     "meg_bentus_ruin_8", {0,0,0,}, -1, {0,0,0,}, 0, 0,},
		{ 1,  "Squadron",      "Bentus9",     "meg_bentus_ruin_9", {0,0,0,}, -1, {0,0,0,}, 0, 0,},
		{ 1,  "Squadron",     "Bentus10",    "meg_bentus_ruin_10", {0,0,0,}, -1, {0,0,0,}, 0, 0,},
		{ 1,  "Squadron",     "Bentus11",    "meg_bentus_ruin_11", {0,0,0,}, -1, {0,0,0,}, 0, 0,},
	}
	local threeRing =
	{
		{ 8,  "Asteroid",   "Asteroid_M_3", {0,0,0,}, 100, 0, 0, 0, 0,},
		{ 2, "DustCloud", "polySurface1", "DustCloud_0", {0,0,0,}, {1,1,1,1,}, 0, 6000,},
		{32, "Pebble", "pebble_m_0", {0,0,0,}, 0, 0, 0,},
	}
	local cloudRing =
	{
		{ 2, "DustCloud", "polySurface1", "DustCloud_0", {0,0,0,}, {1,1,1,1,}, 0, 5000,},
		{ 4, "DustCloud", "polySurface1", "DustCloud_0", {0,0,0,}, {1,1,1,1,}, 0, 3000,},
		{ 8, "DustCloud", "polySurface1", "DustCloud_0", {0,0,0,}, {1,1,1,1,}, 0, 1000,},
	}

	-- cloud & pebble rings
	--ringAdd(<tPos>, <tDst>, {<fAx1>, <fAx2>, <fThk>, <fHgh>, <tArc>, <iMod>,}, <tRot>, <tSeed>)
	ringAdd(ring1.cood, threeRing,	{ring1.axs1, ring1.axs2, ring1.thck, ring1.hght,	{000, 360,}, 1,}, {ring1.tilt, ring1.spin, 0,}, my_seed_1)
	ringAdd(ring2.cood, threeRing,	{ring2.axs1, ring2.axs2, ring2.thck, ring2.hght,	{000, 360,}, 1,}, {ring2.tilt, ring2.spin, 0,}, my_seed_1)
	ringAdd(ring3.cood, threeRing,	{ring3.axs1, ring3.axs2, ring3.thck, ring3.hght,	{000, 360,}, 1,}, {ring3.tilt, ring3.spin, 0,}, my_seed_1)
	ringAdd(ring4.cood, threeRing,	{ring4.axs1, ring4.axs2, ring4.thck, ring4.hght,	{000, 360,}, 1,}, {ring4.tilt, ring4.spin, 0,}, my_seed_1)
	ringAdd(ring5.cood, threeRing,	{ring5.axs1, ring5.axs2, ring5.thck, ring5.hght,	{000, 360,}, 1,}, {ring5.tilt, ring5.spin, 0,}, my_seed_1)

	-- dust clouds
	ringAdd(ring1.cood, cloudRing,	{ring1.axs1, ring1.axs2, ring1.thck, ring1.hght,	{030, 075,}, 1,}, {ring1.tilt, ring1.spin, 0,}, my_seed_1)
	ringAdd(ring1.cood, cloudRing,	{ring1.axs1, ring1.axs2, ring1.thck, ring1.hght,	{105, 150,}, 1,}, {ring1.tilt, ring1.spin, 0,}, my_seed_1)
	ringAdd(ring1.cood, cloudRing,	{ring1.axs1, ring1.axs2, ring1.thck, ring1.hght,	{210, 255,}, 1,}, {ring1.tilt, ring1.spin, 0,}, my_seed_1)
	ringAdd(ring1.cood, cloudRing,	{ring1.axs1, ring1.axs2, ring1.thck, ring1.hght,	{285, 330,}, 1,}, {ring1.tilt, ring1.spin, 0,}, my_seed_1)
	ringAdd(ring2.cood, cloudRing,	{ring2.axs1, ring2.axs2, ring2.thck, ring2.hght,	{030, 075,}, 1,}, {ring2.tilt, ring2.spin, 0,}, my_seed_1)
	ringAdd(ring2.cood, cloudRing,	{ring2.axs1, ring2.axs2, ring2.thck, ring2.hght,	{105, 150,}, 1,}, {ring2.tilt, ring2.spin, 0,}, my_seed_1)
	ringAdd(ring2.cood, cloudRing,	{ring2.axs1, ring2.axs2, ring2.thck, ring2.hght,	{210, 255,}, 1,}, {ring2.tilt, ring2.spin, 0,}, my_seed_1)
	ringAdd(ring2.cood, cloudRing,	{ring2.axs1, ring2.axs2, ring2.thck, ring2.hght,	{285, 330,}, 1,}, {ring2.tilt, ring2.spin, 0,}, my_seed_1)
	ringAdd(ring3.cood, cloudRing,	{ring3.axs1, ring3.axs2, ring3.thck, ring3.hght,	{030, 075,}, 1,}, {ring3.tilt, ring3.spin, 0,}, my_seed_1)
	ringAdd(ring3.cood, cloudRing,	{ring3.axs1, ring3.axs2, ring3.thck, ring3.hght,	{105, 150,}, 1,}, {ring3.tilt, ring3.spin, 0,}, my_seed_1)
	ringAdd(ring3.cood, cloudRing,	{ring3.axs1, ring3.axs2, ring3.thck, ring3.hght,	{210, 255,}, 1,}, {ring3.tilt, ring3.spin, 0,}, my_seed_1)
	ringAdd(ring3.cood, cloudRing,	{ring3.axs1, ring3.axs2, ring3.thck, ring3.hght,	{285, 330,}, 1,}, {ring3.tilt, ring3.spin, 0,}, my_seed_1)
	ringAdd(ring4.cood, cloudRing,	{ring4.axs1, ring4.axs2, ring4.thck, ring4.hght,	{030, 075,}, 1,}, {ring4.tilt, ring4.spin, 0,}, my_seed_1)
	ringAdd(ring4.cood, cloudRing,	{ring4.axs1, ring4.axs2, ring4.thck, ring4.hght,	{105, 150,}, 1,}, {ring4.tilt, ring4.spin, 0,}, my_seed_1)
	ringAdd(ring4.cood, cloudRing,	{ring4.axs1, ring4.axs2, ring4.thck, ring4.hght,	{210, 255,}, 1,}, {ring4.tilt, ring4.spin, 0,}, my_seed_1)
	ringAdd(ring4.cood, cloudRing,	{ring4.axs1, ring4.axs2, ring4.thck, ring4.hght,	{285, 330,}, 1,}, {ring4.tilt, ring4.spin, 0,}, my_seed_1)
	ringAdd(ring5.cood, cloudRing,	{ring5.axs1, ring5.axs2, ring5.thck, ring5.hght,	{000, 360,}, 1,}, {ring5.tilt, ring5.spin, 0,}, my_seed_1)

	-- player positions & patches
	ringAdd(ring1.cood, coordRing,	{ring1.axs1, ring1.axs2, 0, 		0,		{000, 360,}, 0,}, {ring1.tilt, ring1.spin, 0,}, my_seed_1)
	ringAdd(ring2.cood, coordRing,	{ring2.axs1, ring2.axs2, 0, 		0,		{000, 360,}, 0,}, {ring2.tilt, ring2.spin, 0,}, my_seed_1)
	ringAdd(ring3.cood, coordRing,	{ring3.axs1, ring3.axs2, 0, 		0,		{000, 360,}, 0,}, {ring3.tilt, ring3.spin, 0,}, my_seed_1)
	ringAdd(ring4.cood, coordRing,	{ring4.axs1, ring4.axs2, 0, 		0,		{000, 360,}, 0,}, {ring4.tilt, ring4.spin, 0,}, my_seed_1)
	ringAdd(ring1.cood, patchRing,	{ring1.axs1, ring1.axs2, 0, 		0,		{000, 360,}, 0,}, {ring1.tilt, ring1.spin, 0,}, my_seed_1)
	ringAdd(ring2.cood, patchRing,	{ring2.axs1, ring2.axs2, 0, 		0,		{000, 360,}, 0,}, {ring2.tilt, ring2.spin, 0,}, my_seed_1)
	ringAdd(ring3.cood, patchRing,	{ring3.axs1, ring3.axs2, 0, 		0,		{000, 360,}, 0,}, {ring3.tilt, ring3.spin, 0,}, my_seed_1)
	ringAdd(ring4.cood, patchRing,	{ring4.axs1, ring4.axs2, 0, 		0,		{000, 360,}, 0,}, {ring4.tilt, ring4.spin, 0,}, my_seed_1)
	ringAdd(ring5.cood, patchRing,	{ring5.axs1, ring5.axs2, 0, 		0,		{000, 360,}, 0,}, {ring5.tilt, ring5.spin, 0,}, my_seed_1)

	for k, iCount in my_coordinates do
		local Position = {iCount[1] + 1000 * srandomSign(my_seed_1), iCount[2], iCount[3] + 1000 * srandomSign(my_seed_1),}
--		print("StartPos" .. (k - 1) .. " = " .. vstr(Position))
		addPoint("StartPos" .. (k - 1), Position, {0, srandom(my_seed_1, 360), 0,})
--		addCloud("polySurface1", "cloud_text_" .. k, Position, {1, 1, 1, 1}, 0, 4096)
	end

--	for k, iCount in my_coordinates do
--		my_coordinates[k] = {iCount[1] + 1000 * srandomSign(my_seed_1), iCount[2], iCount[3] + 1000 * srandomSign(my_seed_1),}
--	end

--	print("StartPos0 = " .. vstr(my_coordinates[1]))
--	addPoint("StartPos0", my_coordinates[1], {0,0,0,})
--	print("StartPos1 = " .. vstr(my_coordinates[2]))
--	addPoint("StartPos1", my_coordinates[2], {0,0,0,})
--	print("StartPos2 = " .. vstr(my_coordinates[3]))
--	addPoint("StartPos2", my_coordinates[3], {0,0,0,})
--	print("StartPos3 = " .. vstr(my_coordinates[4]))
--	addPoint("StartPos3", my_coordinates[4], {0,0,0,})
--	print("StartPos4 = " .. vstr(my_coordinates[5]))
--	addPoint("StartPos4", my_coordinates[5], {0,0,0,})
--	print("StartPos5 = " .. vstr(my_coordinates[6]))
--	addPoint("StartPos5", my_coordinates[6], {0,0,0,})

	-- center sphere
	--shapeAdd(<tPos>, <tDst>, {<sLay>, <fA>, <fB>, ...}, <tRot>, <tSeed>)
	shapeAdd({0,0,0,}, centerSphere, {"Ellipsoid", srandom(my_seed_1, 5000, 10000), srandom(my_seed_1, 5000, 10000), srandom(my_seed_1, 5000, 10000), srandom(my_seed_1, 5000, 10000), 0,}, {srandom(my_seed_1, 0, 360), srandom(my_seed_1, 0, 360), 0,}, my_seed_1)
	addSquadron("BentusMain", "meg_bentus_ruined", {0, 0, 0}, -1, {0, 0, 0}, 0, 0)
end

function NonDetermChunk()
	local my_seed_1 = newseed(seed_proto)
	fogSetActive(0)
	setGlareIntensity(0)
	setLevelShadowColour(0,0,0,1)
	setSensorsManagerCameraDistances(10000,100000)
	randomBackground(my_seed_1, 1)
	randomMusic(my_seed_1, 1)
	randomBattleMusic(my_seed_1, 1)
end
